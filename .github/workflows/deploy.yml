name: Deploy Infra

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: az
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true

    - name: Deploy Hub
      id: deploy-hub
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
        template: ./env/hub.bicep
        deploymentName: 'deploy-${{ github.run_id }}'
        failOnStdErr: false
        additionalArguments: '--verbose'

    - name: Deploy AKS
      id: deploy-aks
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
        template: ./env/aks.bicep
        parameters: >
          clusterAdminUserName=${{ secrets.AKS_ADMIN_USERNAME }}
          sshPublicKey="${{ secrets.AKS_ADMIN_PUBLIC_KEY }}"
        deploymentName: 'deploy-${{ github.run_id }}'
        failOnStdErr: false
        additionalArguments: '--verbose'

    - uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
        cluster-name: ${{ steps.deploy-bicep.outputs.aksClusterName }}

    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main
      with:
        version: '2.0.1'

    - name: Bootstrap Flux on AKS
      env:
        GITHUB_TOKEN: ${{ secrets.FLUX_PAT }}
      run: |
        flux bootstrap github \
        --token-auth \
        --owner=${{ github.repository_owner }} \
        --repository=${{ github.event.repository.name }} \
        --branch=${GITHUB_REF#refs/heads/} \
        --path=clusters/lab \
        --private=false \
        --personal

    - name: Verify cluster reconciliation
      run: |
        kubectl -n flux-system wait kustomization/apps --for=condition=ready --timeout=5m

    - name: Debug failure
      if: failure()
      run: |
        kubectl -n flux-system get all
        kubectl -n flux-system logs deploy/source-controller
        kubectl -n flux-system logs deploy/kustomize-controller
        kubectl -n flux-system logs deploy/helm-controller
        flux get all --all-namespaces